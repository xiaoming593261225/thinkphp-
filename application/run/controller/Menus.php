<?php
/**
 * @Author 张超.
 * @Copyright http://www.zhangchao.name
 * @Email 416716328@qq.com
 * @DateTime 2018/5/8 16:43
 * @Desc
 */

namespace app\run\controller;


use app\common\controller\Run;
use app\run\model\MenusRule;
use think\facade\Config;

class Menus extends Run
{
    protected $menus_rule;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function lists()
    {

        if ($this->request->isAjax()) {
            //根据条件查询数据、之后再进行分页
            if (input("get.title")) {
                $map[] = ['title', "like", "%" . input("get.title") . "%"];
            }
            if (input("get.ismenu")) {
                $map[] = ['ismenu', "eq", input("get.ismenu")];
            }
            if (input("get.name")) {
                $map[] = ['name', "like", "%" . input("get.name") . "%"];
            }
            $map[] = ['status', "eq", 1];
            //读取菜单列表
            $model = new MenusRule();
            $list = $model->field('*,concat(path,id) as level')->where($map)->order("level")->select()->toArray();
            //根据path来处理分类等级 1154.458
            foreach ($list as $key=>&$val){
                $lenth = substr_count($val['path'],",");
                $nbsp = str_repeat("— ",$lenth);
                $val['path'] = $nbsp."L";
            }
            //分页
            $result = paging(input("get.page"), input("get.limit"), $list);
            $this->layAjax(200, "数据获取成功！", count($list), $result);
        } else {
            $menus_rule = new MenusRule();
            $result = $menus_rule->select()->toArray();
            $menus = list_to_tree($result);
            return $this->fetch();
        }
    }

    public function created()
    {
        if ($this->request->isAjax()) {
            $validate = new \app\run\validate\Menus();
            //组装数据
            $post['name'] = input("post.controller") . "/" . input("post.action");
            $post['title'] = input("post.title");
            $post['icon'] = input("post.icon");
            $post['ismenu'] = input("post.ismenu");
            $post['path'] = input("post.path");
            $post['pid'] = input("post.pid");
            if (!$validate->check($post)) $this->ajaxRuturn(400, $validate->getError());
            //如果传递了pid
            $model = new MenusRule();
            $result = $model->allowField(true)->save($post);
            if ($result) {
                $this->ajaxRuturn(200, "菜单添加成功！");
            } else {
                $this->ajaxRuturn(400, "菜单添加失败！");
            }
        } else {
            //读取Icon
            $icon = get_icons();
            $this->assign("icons", $icon);
            //如果传递了父级id
            if (!empty(input("get.pid"))){
                $map[] = ['id','eq',input("get.pid")];
                $model = new MenusRule();
                $menus = $model->where($map)->find()->toArray();
                $menus['path'] = $menus['path'].input("get.pid").",";
                $this->assign("menus",$menus);
            }
            return $this->fetch();
        }
    }
    public function modify(){
        if ($this->request->isAjax()){
            $menus = new MenusRule();
            $post = input("post.");
            unset($post['path']);
            if (isset($post['form'])&& $post['form'] == 'true'){
                $post['name'] = $post['controller']."/".$post['action'];
            }
            $resault = $menus->allowField(true)->save($post,['id'=>$post['id']]);
            if ($resault){
                $this->ajaxRuturn(200,"菜单修改成功！");
            }else{
                $this->ajaxRuturn(400,"菜单修改失败！");
            }
        }else{
            $model = new MenusRule();
            $result = $model->where("id","eq",input("get.id"))->find();
            $result['action'] = ltrim(strstr($result['name'],"/"),"/");
            $result['controller'] = ltrim(strstr($result['name'],"/",true),"/");
            //读取Icon
            $icon = get_icons();
            $this->assign("icons", $icon);
            $this->assign("result",$result);
            return $this->fetch();
        }
    }
    public function delete(){
        if ($this->request->isAjax()){
            $post = input("post.id");
            $ids = explode(",",ltrim($post,","));
            $model = new MenusRule();
            //组装条件
            $map[] = ['id',"in",$ids];
            $result = $model->where($map)->delete();
            if ($result){
                $this->ajaxRuturn(200,"删除成功！");
            }else{
                $this->ajaxRuturn(400,"删除失败！");
            }
        }
    }
}